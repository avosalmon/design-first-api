openapi: 3.0.0
info:
  title: Design-First API
  version: '1.0'
  description: A sample repository to practice Design-First API development in Laravel
servers:
  - url: 'http://localhost:3000'
paths:
  '/users/{userId}/posts':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
    get:
      summary: Get posts for a user
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        slug:
                          type: string
                        published_at:
                          type: string
                          format: date-time
                          nullable: true
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
                      required:
                        - id
                        - title
                        - slug
                        - published_at
                        - created_at
                        - updated_at
                  links:
                    type: object
                    additionalProperties: false
                    required:
                      - first
                      - last
                      - prev
                      - next
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type: string
                        nullable: true
                      next:
                        type: string
                        nullable: true
                  meta:
                    type: object
                    additionalProperties: false
                    required:
                      - current_page
                      - from
                      - last_page
                      - path
                      - per_page
                      - to
                      - total
                      - links
                    properties:
                      current_page:
                        type: integer
                      from:
                        type: integer
                        nullable: true
                      last_page:
                        type: integer
                      path:
                        type: string
                      per_page:
                        type: integer
                      to:
                        type: integer
                        nullable: true
                      total:
                        type: integer
                      links:
                        type: array
                        items:
                          type: object
                          additionalProperties: false
                          properties:
                            url:
                              type: string
                              nullable: true
                            label:
                              type: string
                            active:
                              type: boolean
                          required:
                            - url
                            - label
                            - active
                required:
                  - data
                  - links
                  - meta
              examples:
                Example:
                  value:
                    data:
                      - id: 550
                        title: Ut Laboriosam Et
                        slug: ut-laboriosam-et
                        published_at: '2022-12-21T12:01:31.000000Z'
                        created_at: '2022-12-21T12:01:31.000000Z'
                        updated_at: '2022-12-21T12:01:31.000000Z'
                      - id: 549
                        title: Nobis Harum Similique
                        slug: nobis-harum-similique
                        published_at: null
                        created_at: '2022-12-21T12:01:31.000000Z'
                        updated_at: '2022-12-21T12:01:31.000000Z'
                      - id: 548
                        title: Harum Minus Corrupti
                        slug: harum-minus-corrupti
                        published_at: null
                        created_at: '2022-12-21T12:01:31.000000Z'
                        updated_at: '2022-12-21T12:01:31.000000Z'
                      - id: 547
                        title: Similique Maiores Quaerat
                        slug: similique-maiores-quaerat
                        published_at: null
                        created_at: '2022-12-21T12:01:31.000000Z'
                        updated_at: '2022-12-21T12:01:31.000000Z'
                      - id: 546
                        title: Aliquam Quae Possimus
                        slug: aliquam-quae-possimus
                        published_at: null
                        created_at: '2022-12-21T12:01:31.000000Z'
                        updated_at: '2022-12-21T12:01:31.000000Z'
                      - id: 545
                        title: Quisquam Et Quo
                        slug: quisquam-et-quo
                        published_at: null
                        created_at: '2022-12-21T12:01:31.000000Z'
                        updated_at: '2022-12-21T12:01:31.000000Z'
                      - id: 544
                        title: Omnis Rem Nostrum
                        slug: omnis-rem-nostrum
                        published_at: null
                        created_at: '2022-12-21T12:01:31.000000Z'
                        updated_at: '2022-12-21T12:01:31.000000Z'
                      - id: 543
                        title: Facilis Ut Molestias
                        slug: facilis-ut-molestias
                        published_at: null
                        created_at: '2022-12-21T12:01:31.000000Z'
                        updated_at: '2022-12-21T12:01:31.000000Z'
                      - id: 542
                        title: Quia Ipsa Ab
                        slug: quia-ipsa-ab
                        published_at: null
                        created_at: '2022-12-21T12:01:31.000000Z'
                        updated_at: '2022-12-21T12:01:31.000000Z'
                      - id: 541
                        title: Repellat Sed Atque
                        slug: repellat-sed-atque
                        published_at: null
                        created_at: '2022-12-21T12:01:31.000000Z'
                        updated_at: '2022-12-21T12:01:31.000000Z'
                    links:
                      first: 'http://localhost:8000/api/users/1/posts?page=1'
                      last: 'http://localhost:8000/api/users/1/posts?page=5'
                      prev: null
                      next: 'http://localhost:8000/api/users/1/posts?page=2'
                    meta:
                      current_page: 1
                      from: 1
                      last_page: 5
                      links:
                        - url: null
                          label: '&laquo; Previous'
                          active: false
                        - url: 'http://localhost:8000/api/users/1/posts?page=1'
                          label: '1'
                          active: true
                        - url: 'http://localhost:8000/api/users/1/posts?page=2'
                          label: '2'
                          active: false
                        - url: 'http://localhost:8000/api/users/1/posts?page=3'
                          label: '3'
                          active: false
                        - url: 'http://localhost:8000/api/users/1/posts?page=4'
                          label: '4'
                          active: false
                        - url: 'http://localhost:8000/api/users/1/posts?page=5'
                          label: '5'
                          active: false
                        - url: 'http://localhost:8000/api/users/1/posts?page=2'
                          label: Next &raquo;
                          active: false
                      path: 'http://localhost:8000/api/users/1/posts'
                      per_page: 10
                      to: 10
                      total: 50
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                required:
                  - message
              examples:
                Example:
                  value:
                    message: Unauthenticated.
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                required:
                  - message
              examples:
                Example:
                  value:
                    message: This action is unauthorized.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                required:
                  - message
              examples:
                Example:
                  value:
                    message: 'No query results for model [App\Models\User] 111'
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                  errors:
                    type: object
                    additionalProperties: false
                    properties:
                      page:
                        type: array
                        items:
                          type: string
                      per_page:
                        type: array
                        items:
                          type: string
                      sort_by:
                        type: array
                        items:
                          type: string
                      sort_order:
                        type: array
                        items:
                          type: string
                required:
                  - message
                  - errors
              examples:
                Example:
                  value:
                    message: The page must be an integer. (and 3 more errors)
                    errors:
                      page:
                        - The page must be an integer.
                      per_page:
                        - The selected per page is invalid.
                      sort_by:
                        - The selected sort by is invalid.
                      sort_order:
                        - The selected sort order is invalid.
      operationId: get-users-userId-posts
      description: Get paginated list of posts for a specific user
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
          description: Bearer token
        - schema:
            type: integer
            default: 1
          in: query
          name: page
          description: Page number to return
        - schema:
            type: integer
            enum:
              - 10
              - 25
              - 50
              - 100
            default: 10
          in: query
          name: per_page
          description: Number of items displayed per page
        - schema:
            type: string
            enum:
              - id
              - title
              - slug
              - published_at
              - created_at
              - updated_at
            default: id
          in: query
          name: sort_by
          description: Field to sort by
        - schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          in: query
          name: sort_order
          description: Whether to sort by ascending or descending
  /posts:
    post:
      summary: Create a post
      operationId: post-posts
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    type: object
                    additionalProperties: false
                    required:
                      - id
                      - title
                      - slug
                      - content
                      - created_at
                    properties:
                      id:
                        type: integer
                      title:
                        type: string
                      slug:
                        type: string
                      content:
                        type: string
                      created_at:
                        type: string
                        format: date-time
                required:
                  - data
              examples:
                Example 1:
                  value:
                    data:
                      id: 1
                      user_id: 10
                      title: 2022 Recap
                      slug: 2022-recap
                      content: Architecto at quis itaque minima corrupti consequatur.
                      published_at: '2019-08-24T14:15:22Z'
                      created_at: '2019-08-24T14:15:22Z'
                      updated_at: '2019-08-24T14:15:22Z'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                required:
                  - message
              examples:
                Example:
                  value:
                    message: Unauthenticated.
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                  errors:
                    type: object
                    additionalProperties: false
                    properties:
                      title:
                        type: array
                        items:
                          type: string
                      slug:
                        type: array
                        items:
                          type: string
                      content:
                        type: array
                        items:
                          type: string
                required:
                  - message
                  - errors
              examples:
                Example:
                  value:
                    message: The title field is required. (and 2 more errors)
                    errors:
                      title:
                        - The title field is required.
                      slug:
                        - The slug has already been taken.
                      content:
                        - The content field is required.
      description: Create a new post
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                title:
                  type: string
                slug:
                  type: string
                content:
                  type: string
              required:
                - title
                - slug
                - content
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer token
components:
  schemas: {}
