openapi: 3.1.0
info:
  title: Design-First API
  version: '1.0'
  summary: A sample repository to practice Design-First API development in Laravel
servers:
  - url: 'http://localhost:3000'
paths:
  '/users/{userId}/posts':
    parameters:
      - schema:
          type: integer
        name: userId
        in: path
        required: true
    get:
      summary: Get posts for a user
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        id:
                          type: integer
                        title:
                          type: string
                        slug:
                          type: string
                        published_at:
                          type: string
                          format: date-time
                        created_at:
                          type: string
                          format: date-time
                        updated_at:
                          type: string
                          format: date-time
                      required:
                        - id
                        - title
                        - slug
                        - published_at
                        - created_at
                        - updated_at
                  links:
                    type: object
                    additionalProperties: false
                    required:
                      - first
                      - last
                      - prev
                      - next
                    properties:
                      first:
                        type: string
                      last:
                        type: string
                      prev:
                        type:
                          - string
                          - 'null'
                      next:
                        type:
                          - string
                          - 'null'
                  meta:
                    type: object
                    additionalProperties: false
                    required:
                      - current_page
                      - from
                      - last_page
                      - path
                      - per_page
                      - to
                      - total
                      - links
                    properties:
                      current_page:
                        type: integer
                      from:
                        type:
                          - integer
                          - 'null'
                      last_page:
                        type: integer
                      path:
                        type: string
                      per_page:
                        type: integer
                      to:
                        type:
                          - integer
                          - 'null'
                      total:
                        type: integer
                      links:
                        type: array
                        items:
                          type: object
                          additionalProperties: false
                          properties:
                            url:
                              type:
                                - string
                                - 'null'
                            label:
                              type: string
                            active:
                              type: boolean
                          required:
                            - url
                            - label
                            - active
                required:
                  - data
                  - links
                  - meta
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                required:
                  - message
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                required:
                  - message
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                required:
                  - message
        '422':
          description: Unprocessable Entity (WebDAV)
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                  errors:
                    type: object
                    additionalProperties: false
                    properties:
                      page:
                        type: array
                        items:
                          type: string
                      per_page:
                        type: array
                        items:
                          type: string
                      sort_by:
                        type: array
                        items:
                          type: string
                      sort_order:
                        type: array
                        items:
                          type: string
                required:
                  - message
                  - errors
              examples:
                Example:
                  value:
                    message: The given data was invalid.
                    errors:
                      page:
                        - The page must be an integer.
                        - The selected page is invalid.
                      per_page:
                        - The per page must be an integer.
                        - The selected per page is invalid.
                      sort_by:
                        - The selected sort by is invalid.
                      sort_order:
                        - The selected sort order is invalid.
      operationId: get-users-userId-posts
      description: Get paginated list of posts for a specific user
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
          description: Bearer token
        - schema:
            type: integer
            default: 1
          in: query
          name: page
          description: Page number to return
        - schema:
            type: integer
            enum:
              - 10
              - 25
              - 50
              - 100
            default: 10
          in: query
          name: per_page
          description: Number of items displayed per page
        - schema:
            type: string
            enum:
              - id
              - title
              - slug
              - published_at
              - created_at
              - updated_at
            default: id
          in: query
          name: sort_by
          description: Field to sort by
        - schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          in: query
          name: sort_order
          description: Whether to sort by ascending or descending
components:
  schemas: {}
